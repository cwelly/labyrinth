/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.4.1 ./public/ITile.glb --transform 
Files: ./public/ITile.glb [5.96KB] > C:\Users\Hyunho\Documents\업무\수습\labyrinth\frontend\ITile-transformed.glb [2.67KB] (55%)
*/

import React,{useRef ,useEffect} from 'react'
import { useGLTF } from '@react-three/drei'
import * as THREE from 'three'

export function ITile(props) {
  const { nodes, materials } = useGLTF('/ITile-transformed.glb')
  const meshRef = useRef();

  // useEffect(() => {
  //   if (meshRef.current) {
  //     const box = new THREE.Box3().setFromObject(meshRef.current);
  //     const size = new THREE.Vector3();
  //     box.getSize(size);
  //     console.log('Model size:', size);
  //     // size.x, size.y, size.z에 모델의 크기가 저장됩니다.
  //   }
  // }, [nodes]);

  return (
    <group {...props} dispose={null}>
      <group  >
        <mesh ref={meshRef} geometry={nodes.Cube.geometry} material={materials.floor} />
        <mesh geometry={nodes.Cube_1.geometry} material={materials.outside} />
        <mesh geometry={nodes.Cube_2.geometry} material={materials.wall_color} />
      </group>
    </group>
  )
}

useGLTF.preload('/ITile-transformed.glb')
