/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.4.1 ./public/ITile.glb --transform 
Files: ./public/ITile.glb [5.96KB] > C:\Users\Hyunho\Documents\업무\수습\labyrinth\frontend\ITile-transformed.glb [2.67KB] (55%)
*/

import React, { useRef} from "react";
import { useGLTF, Edges, Html } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { CuboidCollider, RigidBody } from "@react-three/rapier";

// 타일을 만든다면 , 드래그 되었을때 윤곽선이 나오는 설정을 꼭 해줘야 함

// export const PhysicsITile = forwardRef((props,isDraged=false ,ref) => {
export function PhysicsITile({ isDraged = false, ...props }) {
  const { nodes, materials } = useGLTF("/ITile-transformed.glb");
  const rigidRef = useRef();
  if(rigidRef.current!==undefined){
    rigidRef.current.setTranslation(props.position)
    console.log(rigidRef.current)
  }
  return (
    <group {...props} dispose={null}>
      <group>
        <RigidBody  position={props.position}  colliders="cuboid" type="kinematicPosition">
          <CuboidCollider ref={rigidRef} args={[1,1,1]}></CuboidCollider>
          <mesh  geometry={nodes.Cube.geometry} material={materials.floor}>
            <Edges
              visible={isDraged}
              lineWidth={5}
              scale={1.1}
              renderOrder={1000}
              color={"black"}
            ></Edges>
          </mesh>
          <mesh geometry={nodes.Cube_1.geometry} material={materials.outside}>
            <Edges
              visible={isDraged}
              lineWidth={5}
              scale={1.1}
              renderOrder={1000}
              color={"black"}
            ></Edges>
          </mesh>
          <mesh
            geometry={nodes.Cube_2.geometry}
            material={materials.wall_color}
          >
            <Edges
              visible={isDraged}
              lineWidth={5}
              scale={1.1}
              renderOrder={1000}
              color={"black"}
            ></Edges>
          </mesh>
        </RigidBody>
      </group>
    </group>
  );
  }
// })

useGLTF.preload("/ITile-transformed.glb");
